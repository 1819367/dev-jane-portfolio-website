/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1rem; /*changed from 1em */
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Custom Properties, update these for your own design */
/* set up custom properties in the root */
:root {
  /* set up font fammily primary and font family secondary */
  --ff-primary: "Source Sans Pro", "sans-serif";
  --ff-secondary: "Source Code Pro", monospace;

  /* set up font weight */
  --fw-reg: 300;
  --fw-bold: 900;

  /* set up the colors */
  --clr-light: #fff;
  --clr-dark: #303030;
  --clr-accent: #16E0BD;

  /* set up font sizes */
  --fs-h1: 3rem;
  --fs-h2: 2.25rem;
  --fs-h3: 1.25rem;
  --fs-body: 1rem;

  /* set up box shadow */
  --bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25),
        0.125em 0.125em 0.25em rgba(0,0,0,.15); /*second, layered box shadow*/

}

/* redefine the font sizes to make them bigger at larger screen sizes. */

@media (min-width: 800px) {
  :root {
    --fs-h1: 4.5rem;
    --fs-h2: 3.75rem; 
    --fs-h3: 1.5rem;
    --fs-body: 1.125rem;
   }
}

/* General Styles */

body {
  background: var(--clr-light);
  color: var(--clr-dark);
  margin: 0;
  line-height: 1.6;
  font-family: var(--ff-primary);
  font-size: var(--fs-body);
}

section {
  padding: 5em 2em; /*for generic padding on all the setions, keeps things from touching the screen when we don't want it to*/
}

img {
  max-width: 100%;
  display: block;
}

strong {
  font-weight: var(--fw-bold);
}

:focus {
  outline: 3px solid var(--clr-accent);
  outline-offset: 3px;
}

/* Buttons */

.btn {
  display: inline-block;
  padding: .5em 2.5em;
  background: var(--clr-accent);
  color: var(--clr-dark);
  text-decoration: none;
  font-weight: var(--fw-bold);
  cursor: pointer;
  font-size: .8rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  transition: transform 200ms ease-in-out;
}

.btn:hover {
  transform: scale(1.1);
}

/* Typography*/

h1, 
h2,
h3 {
  line-height: 1; /*1.1 => 1, With larger font sizes, in general, if they break on 2 lines, they need a smaller line height*/
  margin: 0;
}

h1 {font-size: var(--fs-h1);}
h2 {font-size: var(--fs-h2);}
h3 {font-size: var(--fs-h3);}

/* skipped the header section for now nd continued setting up the typography */

/*--intro typograhy-- */

.section__title {
  margin-bottom: .25em;
}

.section__title--intro {
  font-weight: var(--fw-reg);
}

/* this moves 'Jane Smith' to it's own line.  Here we use a compound selector. You could have a modifier class*/
.section__title--intro strong {
  display: block;
}

.section__subtitle {
  margin: 0;
  font-size: var(--fs-h3); /*styling the P like a h3*/
}

.section__subtitle--intro,
.section__subtitle--about {
  background: var(--clr-accent);
  font-family: var(--ff-secondary);
  margin-bottom: 1em;
  padding: .25em 1em;
}

.section__subtitle--work {
  color: var(--clr-accent);
  opacity: 1;
  font-weight: var(--fw-bold);
  margin-bottom: 2em;
}

/* header */

header {
  display: flex;
  justify-content: space-between;
  padding: 1em;
}

.logo {
  max-width: 100px;
}

.nav {
  position: fixed; /*pulls the nav out of the flow*/
  background: var(--clr-dark);
  color:var(--clr-light);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 100;

  transform: translateX(100%); /*moves nav out of view*/
  transition: transform 250ms cubic-bezier(.5, 0, .5, 1);
}

.nav__list {
  list-style: none;
  display: flex;
  height: 100%;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  margin: 0;
  padding: 0;
}

.nav__link {
  color: inherit;
  font-weight: var(--fw-bold);
  font-size: var(--fs-h2);
  text-decoration: none;
}

.nav__link:hover {
  color: var(--clr-accent);
}

.nav-toggle {
  padding: .5em;
  background: transparent;
  border: 0;
  cursor: pointer;
  position: absolute;
  right: 1em;
  top: 1em;
  z-index: 1000;
}

.hamburger {
  display: block;  /*default is span which is inline.*/
  position: relative;
}

.hamburger,
.hamburger::before,
.hamburger::after {
  background: var(--clr-dark);
  width: 2em;
  height: 3px;
  border-radius: 1em;
  transition: transform 250ms ease-in-out;
}

.hamburger::before,
.hamburger::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
}

.hamburger::before { top: 6px; }
.hamburger::after { bottom: 6px }


/* Intro section */

.intro {
  position: relative;
}

.intro__img {
  box-shadow: var(--bs);
}

.section__subtitle--intro {
  display: inline-block; /*this shrinks the width to fit the text for the small screen sizes*/
}

@media (min-width: 600px) {
  .intro {
    display: grid;
    width: min-content; /*this shrinks the content down to match the width of the section*/
    margin: 0 auto; /*to center it*/
    grid-column-gap: 1em; /*added for spacing, so text is right up against the image*/
    grid-template-areas:
      "img title"
      "img subtitle";
    grid-template-columns: min-content max-content;
  }

  .intro__img {
    grid-area: img;
    min-width: 250px; /*this is needed to proevent the image from disappearing*/
    position: relative;
    z-index: 2;
  }

  .section__subtitle--intro { /*this could be place in general typography*/
    align-self: start; /*this stops it from stretching down.*/
    grid-column: -1 / 1; /*this causes it to strectch the whole length of the grid, except it going underneath the other elements.  by default they don't want to overlap*/
    grid-row: 2; /*this moves the */
    text-align: right; 
    position: relative;
    left: -1.52em;
    width: calc(100% + 1.5em);
  }
}

/* my services section */

.my__services {
  background-color: var(--clr-dark);
  background-image: url(/images/services-bg.jpg);
  background-size: cover;
  background-blend-mode: soft-light; /*multiply is another option here*/
  color: var(--clr-light);
  text-align: center;
}

.section__title--services {
  color: var(--clr-accent);
  position: relative;
}

.section__title--services::after {
  content: '';
  display: block; /*or display: position;*/
  width: 2em;
  height: 1px;
  margin: 0.5em auto 1em;
  background:var(--clr-light);
  opacity: 0.25;
}

.services {
  margin-bottom: 4em;
}

.service {
  max-width: 500px;
  margin: 0 auto;
}

@media (min-width: 800px) {
  .services {
      display: flex;
      max-width: 1000px;
      margin-left: auto;
      margin-right: auto;
  }

  .service  + .service {
    margin-left: 2em;
  }
}

/* about me section */

.about-me {
  max-width: 1000px; /*this matches the section above*/
  margin: 0 auto; /*for centering*/
}

.about-me__img {
  box-shadow: var(--bs);
}

@media(min-width: 600px) {
  .about-me {
    display: grid;
    grid-template-columns: 1fr 200px;
    grid-template-areas: 
      "title img"
      "subtitle img"
      "text img";
    grid-column-gap: 2em;
  }

  .section__title--about{
    grid-area: title;
  }

  .section__subtitle--about {
    grid-column: 1 / -1;
    grid-row: 2;
    position: relative; /*moves the subtitle to the forefront*/
    left: -1em; /*moves it to the left by 2em*/
    width: calc(100% + 2em); /*this allows the banner to 'stick' out on both sides a little bit*/
    padding-left: 1em; /*this lines up the text on the left side */
    padding-right: calc(200px + 4em); /*this prevents the text from touching the image.*/
  }

  .about-me__img {
    grid-area: img;
    position: relative; /*moves the image on top*/
    z-index: 2; /*this makes sure it's always on top*/
  }
}

/* my work */

.my__work {
  background: var(--clr-dark);
  color:var(--clr-light);
  background-origin: padding-box;
  text-align: center;
}

.portfolio {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

/* add hover effect */
.portfolio__item {
  background: var(--clr-accent);
  overflow: hidden;
}

.portfolio__img {
  transition: 
    transform 750ms cubic-bezier(.5, 0, .5, 1),
    opacity 250ms linear;
}

.portfolio__item:focus {
  position: relative;
  z-index: 2;
}

.portfolio__img:hover,
.portfolio__item:focus .portfolio__img {
  transform: scale(1.2);
  opacity: .5;

} 

/* footer */

.footer {
  background: #141414;
  color: var(--clr-accent);
  text-align: center;
  padding: 2.5em 0;
  margin: 0 auto;
  font-size: var(--fs-h3); 
}

.footer a {
  color: inherit;
  text-decoration: none;
}

.footer__link {
  font-weight: var(--fw-bold);
}

.footer__link:hover,
.social__list--link:hover {
  opacity: .7;
}

.footer__link:hover {
  text-decoration: underline;
}

.social__list {
  list-style: none;
  display: flex;
  justify-content: center;
  margin: 2em 0 0;
  padding: 0; /*to remove default padding to center*/
}

.social__list--item {
  margin: 0 .5em;
}

.social__list--link {
  padding: .5em;  /*make it easier to press on icons*/
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .sr-only class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: " ";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
   * Printing Tables:
   * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

